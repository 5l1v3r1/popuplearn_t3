// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./pul.db"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PUL {
  id           Int           @id @default(autoincrement())
  pul_elements pul_element[]

  name         String @unique
  type         String
  language_1   String
  voice_1      String
  language_2   String
  voice_2      String
  subject      String
  number       String
  introduction String
  sentence     String
  subscriptions Subscription[]
}

model pul_element {
  id       Int      @id @default(autoincrement())
  question String
  answer   String
  details  detail[]

  pul_id Int
  pul    PUL @relation(fields: [pul_id], references: [id])
}

model detail {
  id          Int         @id @default(autoincrement())
  description String
  pul_elem_id Int
  pul_elem    pul_element @relation(fields: [pul_elem_id], references: [id])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  subscriptions Subscription[]
}

model Subscription {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields: [userId], references: [id])
  pul     PUL     @relation(fields: [pulId], references: [id])
  userId  String
  pulId   Int
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
